<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="TokenSell">
    <select id="selectCount" parameterType="com.apollo.exchange.web.sell.dto.SellSearchDTO"
            resultType="java.lang.Integer">

        SELECT
            COUNT(*)
        FROM
            TOKEN_SELL TS
            LEFT JOIN TOKEN_SELL_TRADE_HISTORY TSTH
                ON TS.SELL_ID = TSTH.SELL_ID
            INNER JOIN CLIENT C ON TS.CLIENT_ID = C.CLIENT_ID
        WHERE TS.DEL_YN = 'N'
        <if test="clientTraderUseYn != null &amp;&amp; clientTraderUseYn !=''"> AND C.CLIENT_TRADER_USE_YN = '${clientTraderUseYn}' </if>

        <if test="clientId != null &amp;&amp; clientId !=''">
            AND TS.CLIENT_ID = #{clientId}
        </if>

        <if test="symbol != null &amp;&amp; symbol !=''">
            AND TS.SYMBOL = #{symbol}
        </if>

        <choose>
            <when test="sellTypes != null &amp;&amp; sellType == null">
                AND (
                TS.SELL_TYPE IN
                <foreach item="item" index="index" collection="sellTypes" open="(" separator="," close=")">
                    #{item}
                </foreach>
                <if test="walletAddress != null &amp;&amp; walletAddress != '' &amp;&amp; owner == null &amp;&amp; owner == ''">
                    OR (BUYER_WALLET_ADDRESS = #{walletAddress} OR SELLER_WALLET_ADDRESS = #{walletAddress})
                </if>
                <if test="walletAddress != null &amp;&amp; walletAddress != '' &amp;&amp; owner != null &amp;&amp; owner != ''" >
                    AND (BUYER_WALLET_ADDRESS = #{walletAddress} OR SELLER_WALLET_ADDRESS = #{walletAddress})
                </if>
                )
            </when>
        </choose>

        <if test="sellType != null &amp;&amp; sellType !=''">
            AND TS.SELL_TYPE = #{sellType}
        </if>

        <if test="viewRole != null &amp;&amp; viewRole !=''">
            AND TS.VIEW_ROLE = #{viewRole}
        </if>

        <if test="state != null &amp;&amp; state !=''">
            AND TS.STATE = #{state}
        </if>

        <if test="idOrderStatus != null &amp;&amp; idOrderStatus !=''">
            AND TS.STATE = #{idOrderStatus}
        </if>

        <if test="startDateSearch != null &amp;&amp; startDateSearch !=''">
            <![CDATA[
             AND TS.REG_DATE >= #{startDateSearch}
         ]]>
        </if>

        <if test="endDateSearch != null &amp;&amp; endDateSearch !=''">
            <![CDATA[
             AND TS.REG_DATE <= #{endDateSearch}
         ]]>
        </if>

    </select>
    <select id="selectTokenSellHistory" parameterType="com.apollo.exchange.web.sell.dto.SellSearchDTO"
            resultType="com.apollo.exchange.web.sell.dto.SellSearchDTO">

        SELECT
            TS.SELL_ID
            , TS.P_SELL_ID
            , TS.CLIENT_ID
            , TS.SELL_TYPE
            , TS.SYMBOL
            , TS.VIEW_ROLE
            , TS.SELLER_WALLET_ADDRESS
            , TS.QUANTITY
            , TS.UNIT_PRICE
            , TS.TOTAL_PRICE
            , TS.STATE
            , CM.CODE_NAME AS STATE_NAME
            , TS.BANK_NAME
            , TS.BANK_OWNER
            , TS.DEL_YN
            , TS.TRADE_COMPLETION_DATE
            , TS.REG_DATE AS SELL_REG_DATE
            , TS.REG_WALLET_ADDRESS
            , TSTH.SELL_TRADE_HISTORY_ID
            , TSTH.SELL_ID
            , TSTH.TRADE_STATE
            , TSTH.TXID
            , TSTH.BUYER_WALLET_ADDRESS
            , TSTH.REG_DATE AS TRADE_REG_DATE
            , ROW_NUMBER() OVER(ORDER BY TS.REG_DATE DESC) AS ROW_NUM
        FROM
            TOKEN_SELL TS
            LEFT JOIN TOKEN_SELL_TRADE_HISTORY TSTH ON TS.SELL_ID = TSTH.SELL_ID
            LEFT JOIN COMMON_CODE CM ON CM.GROUP_NAME = 'STATE' AND CODE_VALUE = TS.STATE AND LANG_CODE = #{langCode}
            INNER JOIN CLIENT C ON TS.CLIENT_ID = C.CLIENT_ID
        WHERE
            TS.DEL_YN = 'N' AND TS.STATE != 5
            AND (TSTH.TRADE_STATE IS NULL OR TSTH.TRADE_STATE NOT IN(5))

            <if test="clientTraderUseYn != null &amp;&amp; clientTraderUseYn !=''"> AND C.CLIENT_TRADER_USE_YN = '${clientTraderUseYn}' </if>
            <if test="clientId != null &amp;&amp; clientId !=''">
                AND TS.CLIENT_ID = #{clientId}
            </if>

            <if test="symbol != null &amp;&amp; symbol !=''">
                AND TS.SYMBOL = #{symbol}
            </if>
            <if test="symbolList != null">
                AND (
                TS.SYMBOL IN
                <foreach item="item" index="index" collection="symbolList" open="(" separator="," close=")">
                    #{item}
                </foreach>
                )
            </if>
            <choose>
                <when test="sellTypes != null &amp;&amp; sellType == null">
                    AND (
                    TS.SELL_TYPE IN
                    <foreach item="item" index="index" collection="sellTypes" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    <if test="walletAddress != null &amp;&amp; walletAddress != '' &amp;&amp; owner == null &amp;&amp; owner == ''">
                        OR (
                            BUYER_WALLET_ADDRESS = #{walletAddress}
                            OR SELLER_WALLET_ADDRESS = #{walletAddress}
                            OR REG_WALLET_ADDRESS = #{walletAddress}
                        )
                    </if>
                    <if test="walletAddress != null &amp;&amp; walletAddress != '' &amp;&amp; owner != null &amp;&amp; owner != ''" >
                        AND (
                            BUYER_WALLET_ADDRESS = #{walletAddress}
                            OR SELLER_WALLET_ADDRESS = #{walletAddress}
                            OR REG_WALLET_ADDRESS = #{walletAddress}
                        )
                    </if>
                    )
                </when>
            </choose>

            <if test="sellType != null &amp;&amp; sellType !=''">
                AND TS.SELL_TYPE = #{sellType}
            </if>

            <if test="viewRole != null &amp;&amp; viewRole !=''">
                <choose>
                    <when test="viewRole == 'USER' ">
                        AND TS.VIEW_ROLE IN (#{viewRole} ,'OWNER_SAFE')
                    </when>
                    <otherwise>
                        AND TS.VIEW_ROLE = #{viewRole}
                    </otherwise>
                </choose>
            </if>

            <if test="state != null &amp;&amp; state !=''">
                AND TS.STATE = #{state}
            </if>

            <if test="idOrderStatus != null &amp;&amp; idOrderStatus !=''">
                AND TS.STATE = #{idOrderStatus}
            </if>
            <!--ALARM ROLE-->
            <if test="alarmRole != null &amp;&amp; alarmRole !=''">
               AND REG_WALLET_ADDRESS != #{walletAddress}

            </if>

            <if test="startDateSearch != null &amp;&amp; startDateSearch !=''">
                <![CDATA[
                 AND TS.REG_DATE >= #{startDateSearch}
             ]]>
            </if>

            <if test="endDateSearch != null &amp;&amp; endDateSearch !=''">
                <![CDATA[
                 AND TS.REG_DATE <= #{endDateSearch}
             ]]>
            </if>

            <choose>
                <when test="orderByColumn != null &amp;&amp; orderByColumn != ''"> ORDER BY ${orderByColumn} ${orderByType} </when>
                <otherwise> ORDER BY TS.REG_DATE DESC </otherwise>
            </choose>

        LIMIT #{start}, #{limit}

    </select>

    <select id="selectOneSellId" parameterType="com.apollo.exchange.web.sell.dto.SellSearchDTO"
            resultType="com.apollo.exchange.web.sell.dto.SellSearchDTO">

        SELECT
            TS.SELL_ID
            , TS.P_SELL_ID
            , TS.CLIENT_ID
            , TS.SELL_TYPE
            , TS.SYMBOL
            , TS.VIEW_ROLE
            , TS.SELLER_WALLET_ADDRESS
            , TS.QUANTITY
            , TS.UNIT_PRICE
            , TS.TOTAL_PRICE
            , TS.STATE
            , CM.CODE_NAME AS STATE_NAME
            , TS.BANK_NAME
            , TS.BANK_OWNER
            , TS.BANK_ACCOUNT
            , TS.DEL_YN
            , TS.TRADE_COMPLETION_DATE
            , TS.REG_DATE AS SELL_REG_DATE
            , TS.REG_WALLET_ADDRESS
            , TSTH.SELL_TRADE_HISTORY_ID
            , TSTH.SELL_ID
            , TSTH.TRADE_STATE
            , TSTH.TXID
            , TSTH.BUYER_WALLET_ADDRESS
            , TSTH.REG_DATE AS TRADE_REG_DATE
            , ROW_NUMBER() OVER(ORDER BY TS.REG_DATE DESC) AS ROW_NUM
            FROM
                TOKEN_SELL TS
                LEFT JOIN TOKEN_SELL_TRADE_HISTORY TSTH
                    ON TS.SELL_ID = TSTH.SELL_ID
                    AND TSTH.TRADE_STATE != 5
                LEFT JOIN COMMON_CODE CM
                    ON CM.GROUP_NAME = 'STATE'
                    AND CODE_VALUE = TS.STATE
                    AND LANG_CODE = #{langCode}
            WHERE
                TS.SELL_ID = #{sellId} AND TS.DEL_YN = 'N'

            <if test="clientId != null &amp;&amp; clientId !=''">
                AND TS.CLIENT_ID = #{clientId}
            </if>

            <if test="symbol != null &amp;&amp; symbol !=''">
                AND TS.SYMBOL = #{symbol}
            </if>

            <if test="sellType != null &amp;&amp; sellType !=''">
                AND TS.SELL_TYPE = #{sellType}
            </if>

            <if test="state != null &amp;&amp; state !=''">
                AND TS.STATE = #{state}
            </if>

            <if test="idOrderStatus != null &amp;&amp; idOrderStatus !=''">
                AND TS.STATE = #{idOrderStatus}
            </if>
    </select>

    <insert id="insertOne" parameterType="com.apollo.exchange.web.sell.dto.SellDTO">

        <![CDATA[
         INSERT INTO TOKEN_SELL
            (
                P_SELL_ID
                , CLIENT_ID
                , SELL_TYPE
                , SYMBOL
                , VIEW_ROLE
                , SELLER_WALLET_ADDRESS
                , QUANTITY
                , UNIT_PRICE
                , TOTAL_PRICE
                , STATE
                , BANK_NAME
                , BANK_OWNER
                , BANK_ACCOUNT
                , REG_WALLET_ADDRESS
                , DEL_YN
            )
            VALUES
            (
                #{pSellId}
                , #{clientId}
                , #{sellType}
                , #{symbol}
                , #{viewRole}
                , #{sellerWalletAddress}
                , #{quantity}
                , #{unitPrice}
                , #{totalPrice}
                , #{state}
                , #{bankName}
                , #{bankOwner}
                , #{bankAccount}
                , #{regWalletAddress}
                , 'N'
            )
        ]]>
        <selectKey resultType="Int" keyProperty="sellId">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updateOne" parameterType="com.apollo.exchange.web.sell.dto.SellSearchDTO">

        UPDATE TOKEN_SELL
            SET
                P_SELL_ID =  #{pSellId}
                , CLIENT_ID =  #{clientId}
                , SELL_TYPE =  #{sellType}
                , SYMBOL =  #{symbol}
                , VIEW_ROLE =  #{viewRole}
                , SELLER_WALLET_ADDRESS =  #{sellerWalletAddress}
                , QUANTITY =  #{quantity}
                , UNIT_PRICE =  #{unitPrice}
                , TOTAL_PRICE =  #{totalPrice}
                , STATE =  #{state}
                , BANK_NAME =  #{bankName}
                , BANK_OWNER =  #{bankOwner}
                , BANK_ACCOUNT =  #{bankAccount}
                , DEL_YN =  #{delYn}
            WHERE SELL_ID = #{sellId}
    </update>
    <update id="updateStateByIds" parameterType="com.apollo.exchange.web.sell.dto.SellSearchDTO">
        UPDATE
            TOKEN_SELL
        SET
            STATE = #{state}
        WHERE
            SELL_ID IN
            <foreach item="item" index="index" collection="sellIds" open="(" separator="," close=")">
                #{item}
            </foreach>
    </update>


</mapper>